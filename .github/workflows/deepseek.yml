name: 🛠️ Build RAX3000M OpenWrt Firmware

on:
  workflow_dispatch: # 手动触发编译
  push:
    branches: [ main ] # 主分支推送触发

env:
  REPO_URL: https://github.com/hanwckf/immortalwrt-mt798x.git
  REPO_BRANCH: openwrt-21.02
  FIRMWARE_NAME: RAX3000M-OpenWrt-$(date +%Y%m%d) # 标准化固件名称
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 120 # 编译超时时间

    steps:
    # --------------------- 初始化阶段 ---------------------
    - name: 🛠️ Checkout Repository
      uses: actions/checkout@v4
      with:
        submodules: recursive # 递归克隆子模块

    - name: 🐳 Setup Build Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* # 清理旧源
        sudo apt-get update -qq
        sudo bash <(curl -sL https://build-scripts.immortalwrt.eu.org/init_build_environment.sh)
        sudo timedatectl set-timezone "$TZ"

    # --------------------- 源码处理 ---------------------
    - name: 📥 Clone ImmortalWrt Source
      working-directory: /workdir
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: 🔧 Apply Custom Config
      run: |
        [ -e configs/rax3000m.config ] && cp configs/rax3000m.config openwrt/.config
        [ -e diy-part1.sh ] && chmod +x diy-part1.sh && ./diy-part1.sh

    # --------------------- 依赖管理 ---------------------
    - name: 🔄 Update Feeds
      working-directory: openwrt
      run: ./scripts/feeds update -a

    - name: 📦 Install Feeds
      working-directory: openwrt
      run: ./scripts/feeds install -a

    # --------------------- 编译阶段 ---------------------
    - name: 📦 Download Packages
      working-directory: openwrt
      run: |
        make defconfig
        make download -j$(nproc) # 并行下载
        find dl -size -1024c -delete # 清理无效下载

    - name: 🔨 Compile Firmware
      working-directory: openwrt
      run: |
        echo "Using $(nproc) threads for compilation"
        make -j$(nproc) || make -j1 V=s # 失败时单线程调试

    # --------------------- 输出处理 ---------------------
    - name: 📤 Upload Firmware
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.FIRMWARE_NAME }}_${{ env.DEVICE_NAME }}  # 示例：RAX3000M_20240315_mediatek-mt7981
        path: openwrt/bin/targets/*/*/*
        retention-days: 3 # 自动清理旧文件

    # --------------------- 后期清理 ---------------------
    - name: 🧹 Clean Old Releases
      uses: dev-drprasad/delete-older-releases@v0.2.0
      with:
        keep_latest: 3 # 保留最近3个版本
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 📊 Space Report
      if: always()
      run: df -hT # 存储空间报告
