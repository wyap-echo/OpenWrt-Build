name: 🚀 RAX3000M OpenWrt Manual Build

on:
  workflow_dispatch:  # 🔌 仅保留手动触发

env:
  REPO_URL: https://github.com/hanwckf/immortalwrt-mt798x.git
  REPO_BRANCH: openwrt-21.02
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: configs/rax3000m.config
  FILE_DATE: $(date +'%Y%m%d-%H%M')  # 🕒 固件时间戳
  DEVICE_NAME: RAX3000M             # 🏷️ 设备标识
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 120            # ⏳ 超时限制

    steps:
    # ==================== 初始化阶段 ====================
    - name: 🚀 Checkout Code
      uses: actions/checkout@v4
      with:
        submodules: recursive       # 📦 递归拉取子模块

    - name: 🛠️ Setup Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo apt-get update -qq
        sudo bash -c 'bash <(curl -sL https://build-scripts.immortalwrt.eu.org/init_build_environment.sh)'
        sudo apt-get clean

    # ==================== 源码处理阶段 ====================
    - name: 📥 Clone Source Code
      working-directory: /workdir
      run: |
        git clone --depth=1 $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: 🔄 Apply Custom Feeds
      run: |
        [ -e $FEEDS_CONF ] && cp $FEEDS_CONF openwrt/feeds.conf.default
        [ -x $DIY_P1_SH ] && ./$DIY_P1_SH  # 🛠️ 执行自定义脚本

    # ==================== 依赖管理阶段 ====================
    - name: 📦 Update Feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: ⚙️ Load Configuration
      run: |
        [ -d files ] && cp -r files openwrt/files
        [ -e $CONFIG_FILE ] && cp $CONFIG_FILE openwrt/.config
        [ -x $DIY_P2_SH ] && ./$DIY_P2_SH  # 🧩 应用自定义配置

    # ==================== 编译阶段 ====================
    - name: 📦 Download Packages
      run: |
        cd openwrt
        make defconfig
        make download -j$(nproc)  # 🚀 并行下载加速
        find dl -size -1024c -delete  # 🧹 清理无效包

    - name: 🔥 Compile Firmware
      run: |
        cd openwrt
        echo "Using $(nproc) threads"
        make -j$(nproc) || make -j1 V=s  # 🔄 失败降级重试

    # ==================== 产出处理阶段 ====================
    - name: 📦 Organize Artifacts
      id: organize
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        FIRMWARE_PATH="$PWD"
        echo "FIRMWARE_NAME=${DEVICE_NAME}-${REPO_BRANCH}-${FILE_DATE}" >> $GITHUB_ENV
        echo "path=$FIRMWARE_PATH" >> $GITHUB_OUTPUT

    - name: 🚀 Upload Firmware
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.FIRMWARE_NAME }}  # 📛 规范化命名
        path: ${{ steps.organize.outputs.path }}/*.bin

    # ==================== 清理阶段 ====================
    - name: 🧹 Clean Workflow Runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3
